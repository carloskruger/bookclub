{"version":3,"sources":["services/auth.services.js","components/auth/login.js","components/auth/signup.js","services/bookclub.services.js","components/MyBookClubCard.js","services/meeting.services.js","components/ScheduleForm.js","components/MyClubs.js","components/Navbar.js","components/MembershipForm.js","components/Bookclub-card.js","components/Bookclub-form.js","components/Bookclub-list.js","components/routes/ProtectedRoute.js","components/Bookclub-detail.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","email","service","post","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Login","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","state","authServices","then","theLoggedUser","setUser","history","push","catch","err","console","log","AuthServices","className","onSubmit","for","type","onChange","placeholder","Component","Signup","theNewUser","getBookclubs","getMyBookclub","user_id","getOneBookclub","id","postBookclub","theNewBookclub","addClubMember","MyBookclubCard","description","city","creator","contact","_id","getMeetings","getMyMeeting","bookclub_id","getOneMeeting","postMeeting","theNewMeeting","addMeetingtoClub","ScheduleForm","handleChangeInput","x","closeModal","clubname","location","book","bookauthor","date","time","userInSession","data","club","htmlFor","MyClubs","componentDidMount","updateList","services","loggedInUser","response","bookclubs","handleModalOpen","showModal","handleModalClose","map","bookclub","Dialog","onClose","open","updateBookclubList","creatorid","key","onClick","NavBar","toggleMenu","document","querySelector","classList","toggle","saludo","to","MembershipForm","ids","userId","bookClubId","memberemail","membername","updateBookList","BookclubCard","pathname","BookclubForm","creator_id","books","BookclubList","protectedRoute","component","redirectPath","rest","render","BookclubDetail","match","params","meetingdates","App","setTheUser","user","fetchUser","path","exact","ProtectedRoute","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.488e815c.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    signup = (username, password, email) => this.service.post('signup', { username, password, email })\n    login = (username, password) => this.service.post('login', { username, password })\n    logout = () => this.service.post('logout')\n    loggedin = () => this.service.get('loggedin')\n}","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\nimport '../../styles/login.css';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state\n        this.authServices.login(username, password)\n            .then(theLoggedUser => {\n                this.setState({\n                    username: '',\n                    password: ''\n                })\n                this.props.setUser(theLoggedUser)\n                this.props.history.push('/bookclubs')\n            })\n            .catch(err => console.log({err}))\n    }\n\n    render() {\n\n        return (\n            <div className=\"container login-form\">\n            <form className=\"px-3 py-3 form-control form-control-sm\" onSubmit={this.handleFormSubmit}>\n             <div className=\"form-group\">\n             <label for=\"input-username\">Usuario:</label>\n             <input type=\"text\" className=\"form-control\" name=\"username\" \n              value={this.state.username} onChange={this.handleInputChange}  placeholder=\"Su nombre de usuario\"/>\n             </div>\n            <div className=\"form-group\">\n            <label for=\"input-password\">Contraseña</label>\n            <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"Contraseña\"/>\n            </div>\n        \n        <button type=\"submit\" className=\"btn btn-primary\">Iniciar sesión</button>\n      </form>\n      </div>\n        )\n    }\n}\n\nexport default Login","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\nimport '../../styles/signup.css';\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            email: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        const { username, password, email } = this.state\n        this.authServices.signup(username, password, email)\n            .then(theNewUser => {\n                this.setState({\n                    username: '',\n                    password: '',\n                    email: ''\n                })\n                this.props.setUser(theNewUser)\n                this.props.history.push('/bookclubs')\n            })\n            .catch(err => console.log({err}))\n    }\n\n    render() {\n\n        return (\n\n           \n        <div className=\"container signup-form\">\n        <form className=\"px-3 py-3 form-control form-control-sm\" onSubmit={this.handleFormSubmit}>\n         <div className=\"form-group\">\n         <label for=\"input-username\">Usuario:</label>\n         <input type=\"text\" className=\"form-control\" name=\"username\" \n          value={this.state.username} onChange={this.handleInputChange}  placeholder=\"Su nombre de usuario\"/>\n         </div>\n        <div className=\"form-group\">\n        <label for=\"input-password\">Contraseña</label>\n        <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"Contraseña\"/>\n        </div>\n        <div className=\"form-group\">\n        <label for=\"input-email\">Correo</label>\n         <input type=\"email\" className=\"form-control\" name=\"email\"  value={this.state.email} onChange={this.handleInputChange} placeholder=\"Correo\"/>\n          </div>\n    <button type=\"submit\" className=\"btn btn-primary\">Registrar</button>\n  </form>\n  </div>\n         //   {/* {/* // <div className=\"container\">\n            //     <h1>Registro de usuario</h1>\n            //     <form onSubmit={this.handleFormSubmit}>\n            //         Usuario: <input name=\"username\" type=\"text\" value={this.state.username}  */}\n       //     {/* //         onChange={this.handleInputChange} /> <br></br>\n            //         Contraseña: <input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} /> <br></br>\n            //         Correo: <input name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleInputChange} /> <br></br>\n            //         <input type=\"submit\" value=\"Registrar\" />\n            //     </form>\n            // </div> */} \n\n        )\n    }\n}\n\nexport default Signup\n\n\n  ","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    getBookclubs = () => this.service.get('getAllBookclubs')\n    getMyBookclub = user_id => this.service.get(`getMyBookclub/${user_id}`)\n    getOneBookclub = id => this.service.get(`getOneBookclub/${id}`)\n    postBookclub = theNewBookclub => this.service.post(`postBookclub`, theNewBookclub)\n    addClubMember = theNewBookclub => {\n        // console.log(theNewBookclub)\n        return this.service.post(`addClubMembers`, theNewBookclub)\n    }\n\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// import '../styles/coaster-card.css'\n\n\nconst MyBookclubCard = ({ name, description, city, creator, contact, _id }) => {\n\n    return (\n        <div className=\"col-md-3\">\n            <article className=\"coaster-card\">\n               \n                <h4>{name}</h4>\n                <hr></hr>\n                {/* <Link className=\"btn btn-sm btn-dark\" to={`/schedule/${_id}`}>Programar reuniones</Link> */}\n                <p>{description}</p>\n                <p>Nos reunimos en <b>{city}</b></p>\n                <p>Para mas informacion contactar a: {creator} </p>\n                <p><b>{contact}</b></p>\n            </article>\n        </div>\n    )\n}\n\nexport default MyBookclubCard","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    getMeetings = () => this.service.get('getAllMeetings')\n    getMyMeeting = bookclub_id => this.service.get(`getMyMeeting/${bookclub_id}`)\n    getOneMeeting = id => this.service.get(`getOneMeeting/${id}`)\n    postMeeting = theNewMeeting => this.service.post(`postMeeting`, theNewMeeting)\n    addMeetingtoClub = theNewBookclub => { \n        console.log('service de addmeeting', theNewBookclub)\n        return this.service.post(`addMeetingtoClub`, theNewBookclub)}\n}","import React, { Component } from 'react'\nimport Services from '../services/meeting.services'\n\n\n\nclass ScheduleForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            clubname: '',\n            location: '',\n            book: '',\n            bookauthor: '',\n            date: '',\n            time: '',\n            bookclub_id: this.props.userInSession.data._id\n        }\n        this.service = new Services()\n        \n    }\n\n   \n    componentDidMount() {\n        this.setState({clubname: this.props.club.name}) \n   }\n     \n \n    handleChangeInput = e => this.setState({ [e.target.name]: e.target.value })\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        console.log(\"this.state at ScheduleForm: \",this.state)\n        this.service.postMeeting(this.state)\n            .then(x => {\n                console.log(\"is this passed to Addmeeting? \",this.state)\n                this.service.addMeetingtoClub(this.state)\n                    .then(x => console.log(x))\n                    .catch(err => console.log({err}))\n                this.props.closeModal()\n              \n         //       this.setState = {}\n            })\n    //         .then(x => {\n    //             console.log(this.state)\n    //   //          this.props.closeModal()\n    //             this.props.updateMeetingList()\n    //      //       this.setState = {}\n    //         })\n            .catch(err => console.log('error', {err}))\n    }\n\n    render() {\n     //   console.log(\"props: \", this.props)\n        \n    // console.log(\"bookclubform - this.props.creatorid: \", this.props.creatorid.data._id)\n        // let dataid= this.props.creatorid.data._id\n        return (\n            <>\n                <h4>Nueva Reunión</h4>\n\n                <hr></hr>\n\n                <form onSubmit={this.handleFormSubmit}>\n                    {/* <div className=\"form-group\">\n                        <label htmlFor=\"input-nombre\">Nombre</label>\n                        <input name=\"name\" type=\"text\" className=\"form-control\" id=\"input-nombre\" onChange={this.handleChangeInput} />\n                    </div> */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-location\">Dirección</label>\n                        <input name=\"location\" type=\"text\" className=\"form-control\" id=\"input-location\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-book\">Libro</label>\n                        <input name=\"book\" type=\"text\" className=\"form-control\" id=\"input-book\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-creator\">Autor</label>\n                        <input name=\"bookauthor\" type=\"text\" className=\"form-control\" id=\"input-bookauthor\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-date\">Fecha</label>\n                        <input name=\"date\" type=\"date\" className=\"form-control\" id=\"input-date\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-date\">Hora</label>\n                        <input name=\"time\" type=\"time\" className=\"form-control\" id=\"input-time\" onChange={this.handleChangeInput} />\n                    </div>\n                   \n                    <button type=\"submit\" className=\"btn btn-dark btn-sm\">Crear</button>\n                \n                </form>\n            </>\n        )\n    }\n\n}\n\nexport default ScheduleForm","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\n\nimport MyBookclubCard from './MyBookClubCard'\nimport ScheduleForm from './ScheduleForm'\n\nimport Dialog from '@material-ui/core/Dialog';\n\n\nclass MyClubs extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { bookclubs: [], showModal: false }\n        this.services = new Services()\n    }\n\n    componentDidMount = () => this.updateList()\n\n    updateList = () => {\n        // console.log('actualizando lista')\n        this.services.getMyBookclub(this.props.loggedInUser.data._id)\n            .then(response => this.setState({ bookclubs: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleModalOpen = () => this.setState({ showModal: true })\n    handleModalClose = () => this.setState({ showModal: false })\n\n    render() {\n //       console.log(\"this is at MyClubs.js\", this.state.bookclubs)\n        return (\n            <>\n                <div className=\"container\">\n                <h1>Mis Clubs de Libro</h1>\n                    \n            \n\n                \n\n                    {/* {this.props.loggedInUser && <button className=\"btn btn-dark btn-big\" onClick={this.handleModalOpen}>Iniciar un club nuevo</button>} */}\n\n                    <div className=\"row coasters-list\">\n\n        {this.state.bookclubs.map(bookclub => {\nreturn (\n        <>         \n    \n        <Dialog onClose={this.handleModalClose} open={this.state.showModal} className=\"modal-form\">\n            <ScheduleForm userInSession={this.props.loggedInUser} closeModal={this.handleModalClose} updateBookclubList={this.updateList} creatorid={this.props.loggedInUser} club={bookclub}/>\n        </Dialog>\n        <MyBookclubCard  key={bookclub._id} {...bookclub} />\n        <button onClick={this.handleModalOpen}>Programar</button>   \n        </>)\n        })}\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default MyClubs","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport AuthServices from '../services/auth.services'\nimport MyClubs from './MyClubs'\n// import ProtectedRoute from '../components/routes/ProtectedRoute'\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authServices = new AuthServices()\n    }\n\n\n    toggleMenu = () => document.querySelector('.menu').classList.toggle('abierto')\n\n  \n\n    logout = () => {\n        this.authServices.logout()\n            .then(x => {\n                this.props.setUser(null)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n\n        const saludo = this.props.userInSession ? this.props.userInSession.data.username : 'invitado'\n\n\n        if (this.props.userInSession) {\n            return (\n                <>\n                <div className=\"toggle-menu\" onClick={this.toggleMenu}>&equiv; </div>\n                    <header className=\"menu\">\n                        <h1>El Club del Libro</h1>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Inicio</Link></li>\n                                <li><Link to=\"/bookclubs\">Club de Libros</Link></li>\n                                <li><Link to=\"/profile\">Perfil</Link></li>\n                 \n                 \n                                <li><Link to=\"/myclubs\">Mis Clubes </Link></li>\n                                {/* <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} />\n                                 */}\n                                {/* <li><Link to=\"/signup\">Registro</Link></li>\n                                <li><Link to=\"/login\">Inicio de sesión</Link></li> */}\n                                <li><div onClick={this.logout}>Cerrar sesión</div></li>\n                                <li><small>Bienvenid@, {saludo}</small></li>\n                            \n                            </ul>\n                        </nav>\n                    </header>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"toggle-menu\" onClick={this.toggleMenu}>&equiv; </div>\n                    <header className=\"menu\">\n                        <h1>El Club del Libro</h1>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Inicio</Link></li>\n                                <li><Link to=\"/bookclubs\">Clubes de Libro</Link></li>\n\n                                {/* <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} /> */}\n                                <li><Link to=\"/signup\">Registro</Link></li>\n                                <li><Link to=\"/login\">Inicio de sesión</Link></li>\n                                <li><small>Bienvenid@, {saludo}</small></li>\n                            </ul>\n                        </nav>\n                    </header>\n                </>\n            )\n        }\n        }\n\n    }\n\nexport default NavBar","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\n\n\n\nclass MembershipForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            bookclub_id: '',\n            membername: '',\n            memberemail: '',\n            // userInSession: this.props.userInSession.data._id\n        }\n\n        this.service = new Services()\n        \n    }\n\n   \n    componentDidMount() {\n        this.setState({bookclub_id: this.props.location.state.id})\n    // console.log(\"this.props.clubname\", this.props.bookclubName)   \n    }\n     \n \n    handleChangeInput = e => this.setState({ [e.target.name]: e.target.value })\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n       const ids = {\n           userId: this.props.userInSession.data._id,\n           bookClubId: this.state.bookclub_id,\n           memberemail: this.state.memberemail,\n           membername: this.state.membername\n       }\n        this.service.addClubMember(ids)\n            .then(x => {\n                console.log(this.state)\n                this.props.closeModal()\n                this.props.updateBookList()\n                // this.service.postBookclub({_id: this.state.bookclub_id})\n         //       this.setState = {}\n            })\n            .then(x => {\n                console.log(this.state)\n      //          this.props.closeModal()\n                this.props.updateBookList()\n         //       this.setState = {}\n            })\n            .catch(err => console.log('error', err))\n    }\n\n    render() {\n       console.log(\"props: \", this.props)\n        \n    // console.log(\"bookclubform - this.props.creatorid: \", this.props.creatorid.data._id)\n        // let dataid= this.props.creatorid.data._id\n        return (\n            <>\n                <h4>Ingrese sus datos</h4>\n\n                <hr></hr>\n\n                <form onSubmit={this.handleFormSubmit}>\n                    {/* <div className=\"form-group\">\n                        <label htmlFor=\"input-nombre\">Nombre</label>\n                        <input name=\"name\" type=\"text\" className=\"form-control\" id=\"input-nombre\" onChange={this.handleChangeInput} />\n                    </div> */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-location\">Por favor ingresa tu nombre</label>\n                        <input name=\"membername\" type=\"text\" className=\"form-control\" id=\"input-membername\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-email\">Por favor ingresa tu email</label>\n                        <input name=\"memberemail\" type=\"email\" className=\"form-control\" id=\"input-book\" onChange={this.handleChangeInput} />\n                    </div>\n                   \n                   \n                    <button type=\"submit\" className=\"btn btn-dark btn-sm\">Únete al club</button>\n                \n                </form>\n            </>\n        )\n    }\n\n}\n\nexport default MembershipForm","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Dialog from '@material-ui/core/Dialog';\nimport MembershipForm from './MembershipForm'\n// import '../styles/coaster-card.css'\n\n\nconst BookclubCard = ({ name, description, city, creator, contact, _id }) => {\n    \n    console.log(_id)\n    return (\n        <div className=\"col-md-3\">\n            <article className=\"coaster-card\">\n\n               \n                <h4>{name}</h4>\n                <hr></hr>\n                <Link className=\"btn btn-sm btn-dark\" to={`/bookclub/${_id}`}>Ver detalles</Link>\n                <p>{description}</p>\n                <p>Nos reunimos en <b>{city}</b></p>\n                <p>Para mas informacion contactar a: {creator} </p>\n                <p><b>{contact}</b></p>\n\n                <Link className=\"btn btn-sm-btn-dark\" to={{pathname: `/membership/`, state: {id: _id} }} >Únete a nosotros</Link>\n            </article>\n        </div>\n    )\n}\n\nexport default BookclubCard","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\n\n\n\nclass BookclubForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            description: '',\n            city: '',\n            creator: '',\n            contact: '',\n            creator_id: this.props.creatorid.data._id,\n            books: ''\n        }\n        this.service = new Services()\n    }\n\n  \n   \n    handleChangeInput = e => this.setState({ [e.target.name]: e.target.value })\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.service.postBookclub(this.state)\n            .then(x => {\n                this.props.closeModal()\n                this.props.updateBookclubList()\n            })\n            .catch(err => console.log('error', err))\n    }\n\n    render() {\n\n    // console.log(\"bookclubform - this.props.creatorid: \", this.props.creatorid.data._id)\n        // let dataid= this.props.creatorid.data._id\n        return (\n            <>\n                <h4>Nuevo Club de Libro</h4>\n\n                <hr></hr>\n\n                <form onSubmit={this.handleFormSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-nombre\">Nombre</label>\n                        <input name=\"name\" type=\"text\" className=\"form-control\" id=\"input-nombre\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-description\">Descripción</label>\n                        <input name=\"description\" type=\"text\" className=\"form-control\" id=\"input-description\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-city\">Ciudad</label>\n                        <input name=\"city\" type=\"text\" className=\"form-control\" id=\"input-city\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-creator\">Creador</label>\n                        <input name=\"creator\" type=\"text\" className=\"form-control\" id=\"input-creator\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-contact\">Informacion de contacto</label>\n                        <input name=\"contact\" type=\"text\" className=\"form-control\" id=\"input-contact\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                    {/* <input name=\"creator_id\" type=\"hidden\" className=\"form-control\" id=\"input-creatorid\" value=\"dataid\" /> */}\n                        {/* <input name=\"creator_id\" type=\"hidden\" className=\"form-control\" id=\"input-creatorid\" value={this.props.creatorid.data._id} /> */}\n                        </div>\n                    <button type=\"submit\" className=\"btn btn-dark btn-sm\">Crear</button>\n                    <button className=\"btn btn-dark btn-sm\" onClick={this.props.closeModal}>Cerrar</button>\n                </form>\n            </>\n        )\n    }\n\n}\n\nexport default BookclubForm","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\n\nimport BookclubCard from './Bookclub-card'\nimport BookclubForm from './Bookclub-form'\n\nimport Dialog from '@material-ui/core/Dialog';\n\n\nclass BookclubList extends Component {\n\n    constructor() {\n        super()\n        this.state = { bookclubs: [], showModal: false }\n        this.services = new Services()\n    }\n\n    componentDidMount = () => this.updateList()\n\n    updateList = () => {\n        this.services.getBookclubs()\n            .then(response => this.setState({ bookclubs: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleModalOpen = () => this.setState({ showModal: true })\n    handleModalClose = () => this.setState({ showModal: false })\n\n\n    render() {\n  //      console.log(this.state.bookclubs)\n        return (\n            <>\n                <div className=\"container\">\n\n                    <Dialog onClose={this.handleModalClose} open={this.state.showModal} className=\"modal-form\">\n<BookclubForm closeModal={this.handleModalClose} updateBookclubList={this.updateList} creatorid={this.props.userInSession}/>\n                    </Dialog>\n\n                    <h1>Lista de Clubs de Libro</h1>\n\n                    {this.props.userInSession && <button className=\"btn btn-dark btn-big\" onClick={this.handleModalOpen}>Iniciar un club nuevo</button>}\n\n                    <div className=\"row coasters-list\">\n\n                        {this.state.bookclubs.map(bookclub => <BookclubCard key={bookclub._id} {...bookclub} />)}\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default BookclubList","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute = ({ component: Component, userInSession, redirectPath, ...rest }) => {\n    console.log(userInSession, 'esta o no esta')\n    return (\n        <Route {...rest} render={props => {\n            if (userInSession) {\n                return <Component {...props} loggedInUser={userInSession} />\n            } else {\n                return <Redirect to={{ pathname: redirectPath }} />\n            }\n        }\n        }\n        />\n    )\n}\nexport default protectedRoute;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Services from '../services/bookclub.services'\n\n\n\n\nclass BookclubDetail extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { bookclub: {} }\n        this.service = new Services()\n    }\n\n    componentDidMount() {\n         this.service.getOneBookclub(this.props.match.params.id)\n        \n            .then(\n                response => this.setState({ bookclub: response.data }))\n            .catch(err => console.log('err', err))\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <article className=\"coaster-detail\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-6\">\n                            <h1>Detalles de {this.state.bookclub.name}</h1>\n                            <p><strong>Descripción:</strong> {this.state.bookclub.description}</p>\n                            <hr></hr>\n                            <p><small>Ciudad:</small> {this.state.bookclub.city}</p>\n                          \n                            <p>Libros leidos: {this.state.books} | {this.state.meetingdates}</p>\n                            <p>Para mayor informacion ponte en contacto con {this.state.bookclub.creator} </p>\n                            <p>Su correo {this.state.bookclub.contact} </p>\n                            <Link className=\"btn btn-big btn-dark\" to=\"/bookclubs\">Volver</Link>\n                        </div>\n                        \n                    </div>\n                </article>\n            </div>\n        )\n    }\n\n}\n\nexport default BookclubDetail","import React, {Component} from 'react';\nimport './App.css';\nimport Login from './components/auth/login'\nimport Signup from './components/auth/signup'\nimport { Switch, Route } from 'react-router-dom'\nimport NavBar from './components/Navbar'\nimport AuthServices from './services/auth.services'\nimport BookclubsList from './components/Bookclub-list'\nimport MyClubs from './components/MyClubs'\nimport ProtectedRoute from './components/routes/ProtectedRoute'\nimport ScheduleForm from './components/ScheduleForm'\nimport BookclubDetail from './components/Bookclub-detail'\nimport MembershipForm from './components/MembershipForm'\n//Switch y Route\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: null }\n    this.authServices = new AuthServices()\n  }\n\n  setTheUser = user => {\n    this.setState({ loggedInUser: user })\n    console.log(\"Un componente ha cambiado el usuario en App:\", this.state.loggedInUser)\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this.authServices.loggedin()\n        .then(response => this.setState({ loggedInUser: response }))\n        .catch(x => this.setState({ loggedInUser: false }))\n    }\n  }\n\n  render() {\n\n   \n    if (this.state.loggedInUser) {\n   \n     return  ( <div>\n       \n       <NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n          <Switch>\n\n            {/* <Route path=\"/bookclub\"  /> */}\n            <Route path=\"/bookclub/:id\" exact component={BookclubDetail} />\n            <Route path=\"/membership\" exact render={(match) => <MembershipForm {...match} userInSession={this.state.loggedInUser} />} />\n            <Route path=\"/bookclubs\" exact render={() => <BookclubsList userInSession={this.state.loggedInUser} />} />\n            {/* <Route path=\"/bookclub/:id\" exact component={BookclubDetail} /> */}\n            <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} />\n            <Route path=\"/schedule\"  render={() => <ScheduleForm userInSession={this.state.loggedInUser} />} />       \n            \n          </Switch>\n        </div>\n     )\n    }\n    else\n    return  ( <div>\n       \n      <NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n         <Switch>\n\n           {/* <Route path=\"/bookclub\"  /> */}\n           <Route path=\"/bookclub/:id\" exact component={BookclubDetail} />\n           <Route path=\"/bookclubs\" exact render={() => <BookclubsList userInSession={this.state.loggedInUser} />} />\n           {/* <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} /> */}\n           <Route path=\"/membership\" exact render={match => <MembershipForm {...match} userInSession={this.state.loggedInUser} />} />\n           {/* <Route path=\"/bookclub/:id\" exact component={BookclubDetail} /> */}\n           <Route path=\"/signup\" exact render={match => <Signup {...match} setUser={this.setTheUser} />} /> \n           <Route path=\"/login\" exact render={match => <Login {...match} setUser={this.setTheUser} />} />\n         </Switch>\n       </div>\n    )\n}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n// BrowserRouter\nReactDOM.render(\n    <Router>\n<App />\n</Router>,\n\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}
{"version":3,"sources":["services/auth.services.js","components/auth/login.js","components/auth/signup.js","services/bookclub.services.js","components/MyBookClubCard.js","services/meeting.services.js","components/ScheduleForm.js","components/MyClubs.js","components/Navbar.js","components/MembershipForm.js","components/Bookclub-card.js","components/Bookclub-form.js","components/Bookclub-list.js","components/routes/ProtectedRoute.js","components/Bookclub-detail.js","components/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","email","service","post","login","logout","loggedin","get","this","axios","create","baseURL","withCredentials","Login","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","state","authServices","then","theLoggedUser","err","setUser","history","push","catch","msg","response","data","message","AuthServices","className","onSubmit","htmlFor","type","onChange","placeholder","Component","Signup","theNewUser","getBookclubs","getMyBookclub","user_id","getOneBookclub","id","postBookclub","theNewBookclub","addClubMember","MyBookclubCard","description","city","creator","contact","_id","getMeetings","getMyMeeting","bookclub_id","getOneMeeting","postMeeting","theNewMeeting","addMeetingtoClub","console","log","ScheduleForm","handleChangeInput","x","closeModal","clubname","location","book","bookauthor","date","time","userInSession","club","MyClubs","componentDidMount","updateList","services","loggedInUser","bookclubs","handleModalOpen","showModal","handleModalClose","map","bookclub","Dialog","onClose","open","updateBookclubList","creatorid","key","onClick","NavBar","toggleMenu","document","querySelector","classList","toggle","saludo","to","MembershipForm","ids","userId","bookClubId","memberemail","membername","updateBookList","BookclubCard","pathname","BookclubForm","creator_id","books","BookclubList","protectedRoute","component","redirectPath","rest","render","BookclubDetail","usernames","match","params","meetinglocations","meeting","meetingdates","meetingdate","users","user","Welcome","App","setTheUser","fetchUser","path","exact","ProtectedRoute","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kdAEqBA,EAEjB,aAAe,IAAD,gCAUdC,OAAS,SAACC,EAAUC,EAAUC,GAArB,OAA+B,EAAKC,QAAQC,KAAK,SAAU,CAAEJ,WAAUC,WAAUC,WAV5E,KAWdG,MAAQ,SAACL,EAAUC,GAAX,OAAwB,EAAKE,QAAQC,KAAK,QAAS,CAAEJ,WAAUC,cAXzD,KAYdK,OAAS,kBAAM,EAAKH,QAAQC,KAAK,WAZnB,KAadG,SAAW,kBAAM,EAAKJ,QAAQK,IAAI,aAX9BC,KAAKN,QAAUO,IAAMC,OAAO,CACxBC,QAAS,6BAGTC,iBAAiB,KCqDdC,G,kBAzDX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KASVC,kBAAoB,SAAAC,GAAM,IAAD,EACGA,EAAEC,OAAlBC,EADa,EACbA,KAAMC,EADO,EACPA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KAZT,EAenBE,iBAAmB,SAAAL,GACfA,EAAEM,iBADkB,MAEW,EAAKC,MAA5BxB,EAFY,EAEZA,SAAUC,EAFE,EAEFA,SAClB,EAAKwB,aAAapB,MAAML,EAAUC,GAC7ByB,KAAK,SAAAC,GACF,EAAKN,SAAS,CACVrB,SAAU,GACVC,SAAU,GACV2B,IAAK,KAET,EAAKb,MAAMc,QAAQF,GACnB,EAAKZ,MAAMe,QAAQC,KAAK,gBAE3BC,MAAM,SAAAJ,GACH,IAAIK,EAAML,EAAIM,SAASC,KAAKC,QAC3B,EAAKf,SAAS,CAACO,IAAKK,OA5B7B,EAAKT,MAAQ,CACTxB,SAAU,GACVC,SAAU,GACV2B,IAAK,IAET,EAAKH,aAAe,IAAIY,EAPT,E,sEAoCf,OACI,yBAAKC,UAAU,wBACf,0BAAMA,UAAU,yCAAyCC,SAAU9B,KAAKa,kBACvE,yBAAKgB,UAAU,cACf,2BAAOE,QAAQ,kBAAf,YACA,2BAAOC,KAAK,OAAOH,UAAU,eAAenB,KAAK,WAChDC,MAAOX,KAAKe,MAAMxB,SAAU0C,SAAUjC,KAAKO,kBAAoB2B,YAAY,0BAE7E,yBAAKL,UAAU,cACf,2BAAOE,QAAQ,kBAAf,iBACA,2BAAOC,KAAK,WAAWH,UAAU,eAAenB,KAAK,WAAWC,MAAOX,KAAKe,MAAMvB,SAAUyC,SAAUjC,KAAKO,kBAAmB2B,YAAY,mBAG9I,4BAAQF,KAAK,SAASH,UAAU,mBAAhC,sBAED7B,KAAKe,MAAMI,KAAO,uBAAGU,UAAU,eAAe7B,KAAKe,MAAMI,U,GArD5CgB,cC6ELC,G,kBA3EX,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KAUVC,kBAAoB,SAAAC,GAAM,IAAD,EACGA,EAAEC,OAAlBC,EADa,EACbA,KAAMC,EADO,EACPA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KAbT,EAgBnBE,iBAAmB,SAAAL,GACfA,EAAEM,iBADkB,MAEkB,EAAKC,MAAnCxB,EAFY,EAEZA,SAAUC,EAFE,EAEFA,SAAUC,EAFR,EAEQA,MAC5B,EAAKuB,aAAa1B,OAAOC,EAAUC,EAAUC,GACxCwB,KAAK,SAAAoB,GACF,EAAKzB,SAAS,CACVrB,SAAU,GACVC,SAAU,GACVC,MAAO,GACP0B,IAAK,KAET,EAAKb,MAAMc,QAAQiB,GACnB,EAAK/B,MAAMe,QAAQC,KAAK,gBAE5BC,MAAM,SAAAJ,GACH,IAAIK,EAAML,EAAIM,SAASC,KAAKC,QAC3B,EAAKf,SAAS,CAACO,IAAKK,OA9B5B,EAAKT,MAAQ,CACTxB,SAAU,GACVC,SAAU,GACVC,MAAO,GACP0B,IAAK,IAET,EAAKH,aAAe,IAAIY,EART,E,sEAsCf,OAGA,yBAAKC,UAAU,yBACf,0BAAMA,UAAU,yCAAyCC,SAAU9B,KAAKa,kBACvE,yBAAKgB,UAAU,cACf,2BAAOE,QAAQ,kBAAf,YACA,2BAAOC,KAAK,OAAOH,UAAU,eAAenB,KAAK,WAChDC,MAAOX,KAAKe,MAAMxB,SAAU0C,SAAUjC,KAAKO,kBAAoB2B,YAAY,0BAE7E,yBAAKL,UAAU,cACf,2BAAOE,QAAQ,kBAAf,iBACA,2BAAOC,KAAK,WAAWH,UAAU,eAAenB,KAAK,WAAWC,MAAOX,KAAKe,MAAMvB,SAAUyC,SAAUjC,KAAKO,kBAAmB2B,YAAY,mBAE1I,yBAAKL,UAAU,cACf,2BAAOE,QAAQ,eAAf,UACC,2BAAOC,KAAK,QAAQH,UAAU,eAAenB,KAAK,QAASC,MAAOX,KAAKe,MAAMtB,MAAOwC,SAAUjC,KAAKO,kBAAmB2B,YAAY,YAEvI,4BAAQF,KAAK,SAASH,UAAU,mBAAhC,cAEa7B,KAAKe,MAAMI,KAAO,uBAAGU,UAAU,gBAAgB7B,KAAKe,MAAMI,U,GA5DtDgB,c,eCFA9C,EAEjB,aAAe,IAAD,gCASdiD,aAAe,kBAAM,EAAK5C,QAAQK,IAAI,oBATxB,KAUdwC,cAAgB,SAAAC,GAAO,OAAI,EAAK9C,QAAQK,IAAb,wBAAkCyC,KAV/C,KAWdC,eAAiB,SAAAC,GAAE,OAAI,EAAKhD,QAAQK,IAAb,yBAAmC2C,KAX5C,KAYdC,aAAe,SAAAC,GAAc,OAAI,EAAKlD,QAAQC,KAAb,eAAkCiD,IAZrD,KAadC,cAAgB,SAAAD,GAEZ,OAAO,EAAKlD,QAAQC,KAAb,iBAAoCiD,IAb3C5C,KAAKN,QAAUO,IAAMC,OAAO,CACxBC,QAAS,6BAETC,iBAAiB,KCed0C,G,MAlBQ,SAAC,GAAwD,IAAtDpC,EAAqD,EAArDA,KAAMqC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAAmB,EAAVC,IAEjE,OACI,yBAAKtB,UAAU,4BAGP,4BAAKnB,GACL,6BAEA,2BAAIqC,GACJ,2BAAG,2BAAIC,IACP,2BAAIC,EAAJ,KACA,2BAAG,2BAAIC,OChBF7D,EAEjB,aAAe,IAAD,gCASd+D,YAAc,kBAAM,EAAK1D,QAAQK,IAAI,mBATvB,KAUdsD,aAAe,SAAAC,GAAW,OAAI,EAAK5D,QAAQK,IAAb,uBAAiCuD,KAVjD,KAWdC,cAAgB,SAAAb,GAAE,OAAI,EAAKhD,QAAQK,IAAb,wBAAkC2C,KAX1C,KAYdc,YAAc,SAAAC,GAAa,OAAI,EAAK/D,QAAQC,KAAb,cAAiC8D,IAZlD,KAadC,iBAAmB,SAAAd,GAEf,OADAe,QAAQC,IAAI,wBAAyBhB,GAC9B,EAAKlD,QAAQC,KAAb,mBAAsCiD,IAb7C5C,KAAKN,QAAUO,IAAMC,OAAO,CACxBC,QAAS,6BAETC,iBAAiB,KC0FdyD,G,kBA3FX,WAAYvD,GAAQ,IAAD,8BACf,4CAAMA,KAoBVwD,kBAAoB,SAAAtD,GAAC,OAAI,EAAKI,SAAL,eAAiBJ,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SArBhD,EAuBnBE,iBAAmB,SAAAL,GACfA,EAAEM,iBACF6C,QAAQC,IAAI,+BAA+B,EAAK7C,OAChD,EAAKrB,QAAQ8D,YAAY,EAAKzC,OACzBE,KAAK,SAAA8C,GACFJ,QAAQC,IAAI,iCAAiC,EAAK7C,OAClD,EAAKrB,QAAQgE,iBAAiB,EAAK3C,OAC9BE,KAAK,SAAA8C,GAAC,OAAIJ,QAAQC,IAAIG,KACtBxC,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAI,CAACzC,UAC/B,EAAKb,MAAM0D,eAUdzC,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAI,QAAS,CAACzC,WAxCxC,EAAKJ,MAAQ,CACTkD,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,WAAY,GACZC,KAAM,GACNC,KAAM,GACNhB,YAAa,EAAKhD,MAAMiE,cAAc7C,KAAKyB,KAE/C,EAAKzD,QAAU,IAAIL,EAXJ,E,iFAiBfW,KAAKY,SAAS,CAACqD,SAAUjE,KAAKM,MAAMkE,KAAK9D,S,+BAiCzC,OACI,oCACI,gDAEA,6BAEA,0BAAMmB,UAAU,gBAAgBC,SAAU9B,KAAKa,kBAK3C,yBAAKgB,UAAU,cACX,2BAAOE,QAAQ,kBAAf,gBACA,2BAAOrB,KAAK,WAAWsB,KAAK,OAAOH,UAAU,eAAea,GAAG,iBAAiBT,SAAUjC,KAAK8D,qBAEnG,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,cAAf,SACA,2BAAOrB,KAAK,OAAOsB,KAAK,OAAOH,UAAU,eAAea,GAAG,aAAaT,SAAUjC,KAAK8D,qBAE3F,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,iBAAf,SACA,2BAAOrB,KAAK,aAAasB,KAAK,OAAOH,UAAU,eAAea,GAAG,mBAAmBT,SAAUjC,KAAK8D,qBAEvG,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,cAAf,SACA,2BAAOrB,KAAK,OAAOsB,KAAK,OAAOH,UAAU,eAAea,GAAG,aAAaT,SAAUjC,KAAK8D,qBAE3F,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,cAAf,QACA,2BAAOrB,KAAK,OAAOsB,KAAK,OAAOH,UAAU,eAAea,GAAG,aAAaT,SAAUjC,KAAK8D,qBAG3F,4BAAQ9B,KAAK,SAASH,UAAU,uBAAhC,e,GApFOM,c,QCuDZsC,E,YAlDX,WAAYnE,GAAQ,IAAD,8BACf,4CAAMA,KAKVoE,kBAAoB,kBAAM,EAAKC,cANZ,EAQnBA,WAAa,WAET,EAAKC,SAASrC,cAAc,EAAKjC,MAAMuE,aAAanD,KAAKyB,KACpDlC,KAAK,SAAAQ,GAAQ,OAAI,EAAKb,SAAS,CAAEkE,UAAWrD,EAASC,SACrDH,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAIzC,MAZf,EAenB4D,gBAAkB,kBAAM,EAAKnE,SAAS,CAAEoE,WAAW,KAfhC,EAgBnBC,iBAAmB,kBAAM,EAAKrE,SAAS,CAAEoE,WAAW,KAdhD,EAAKjE,MAAQ,CAAE+D,UAAW,GAAIE,WAAW,GACzC,EAAKJ,SAAW,IAAIvF,EAHL,E,sEAkBT,IAAD,OAEL,OACI,oCACI,yBAAKwC,UAAU,aACf,kDAGI,yBAAKA,UAAU,sBAE1B7B,KAAKe,MAAM+D,UAAUI,IAAI,SAAAC,GAClC,OACQ,oCAEA,kBAACC,EAAA,EAAD,CAAQC,QAAS,EAAKJ,iBAAkBK,KAAM,EAAKvE,MAAMiE,UAAWnD,UAAU,cAC1E,kBAAC,EAAD,CAAc0C,cAAe,EAAKjE,MAAMuE,aAAcb,WAAY,EAAKiB,iBAAkBM,mBAAoB,EAAKZ,WAAYa,UAAW,EAAKlF,MAAMuE,aAAcL,KAAMW,KAE5K,yBAAKtD,UAAU,aACf,kBAAC,EAAD,eAAiB4D,IAAKN,EAAShC,KAASgC,IACxC,4BAAQtD,UAAU,sBAAsB6D,QAAS,EAAKX,iBAAtD,uC,GAvCc5C,aC2EPwD,E,YA3EX,WAAYrF,GAAQ,IAAD,8BACf,4CAAMA,KAKVsF,WAAa,kBAAMC,SAASC,cAAc,SAASC,UAAUC,OAAO,YANjD,EAUnBnG,OAAS,WACL,EAAKmB,aAAanB,SACboB,KAAK,SAAA8C,GACF,EAAKzD,MAAMc,QAAQ,QAEtBG,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAIzC,MAb9B,EAAKH,aAAe,IAAIY,EAFT,E,sEAqBf,IAAMqE,EAASjG,KAAKM,MAAMiE,cAAgBvE,KAAKM,MAAMiE,cAAc7C,KAAKnC,SAAW,WAGnF,OAAIS,KAAKM,MAAMiE,cAEP,oCACA,yBAAK1C,UAAU,cAAc6D,QAAS1F,KAAK4F,YAA3C,WACI,4BAAQ/D,UAAU,QACd,iDACA,6BACI,4BACI,4BAAI,kBAAC,IAAD,CAAMqE,GAAG,KAAT,WACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,mBAIJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,gBAKJ,4BAAI,yBAAKR,QAAS1F,KAAKH,QAAnB,qBACJ,4BAAI,8CAAoBoG,QASxC,oCACI,yBAAKpE,UAAU,cAAc6D,QAAS1F,KAAK4F,YAA3C,WACA,4BAAQ/D,UAAU,QACd,iDACA,6BACI,4BACI,4BAAI,kBAAC,IAAD,CAAMqE,GAAG,KAAT,WACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,oBAGJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,WAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,wBACJ,4BAAI,8CAAoBD,Y,GAlEnC9D,aC+ENgE,G,kBA9EX,WAAY7F,GAAQ,IAAD,8BACf,4CAAMA,KAoBVwD,kBAAoB,SAAAtD,GAAC,OAAI,EAAKI,SAAL,eAAiBJ,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SArBhD,EAuBnBE,iBAAmB,SAAAL,GACfA,EAAEM,iBACH,IAAMsF,EAAM,CACRC,OAAQ,EAAK/F,MAAMiE,cAAc7C,KAAKyB,IACtCmD,WAAY,EAAKvF,MAAMuC,YACvBiD,YAAa,EAAKxF,MAAMwF,YACxBC,WAAY,EAAKzF,MAAMyF,YAE1B,EAAK9G,QAAQmD,cAAcuD,GACtBnF,KAAK,SAAA8C,GACFJ,QAAQC,IAAI,EAAK7C,OACjB,EAAKT,MAAM0D,aACX,EAAK1D,MAAMmG,mBAIdxF,KAAK,SAAA8C,GACFJ,QAAQC,IAAI,EAAK7C,OAEjB,EAAKT,MAAMmG,iBACX,EAAK7F,SAAW,KAEnBW,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAI,QAASzC,MA3CvC,EAAKJ,MAAQ,CAETuC,YAAa,GACbkD,WAAY,GACZD,YAAa,IAIjB,EAAK7G,QAAU,IAAIL,EAVJ,E,iFAgBfW,KAAKY,SAAS,CAAC0C,YAAatD,KAAKM,MAAM4D,SAASnD,MAAM2B,O,+BAqCtD,OAJDiB,QAAQC,IAAI,UAAW5D,KAAKM,OAKvB,yBAAKuB,UAAU,8BAGX,0BAAMA,UAAU,yCAA0CC,SAAU9B,KAAKa,kBAErE,yBAAKgB,UAAU,cACX,2BAAOE,QAAQ,kBAAf,+BACA,2BAAOrB,KAAK,aAAasB,KAAK,OAAOH,UAAU,eAAea,GAAG,mBAAmBT,SAAUjC,KAAK8D,qBAEvG,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,eAAf,8BACA,2BAAOrB,KAAK,cAAcsB,KAAK,QAAQH,UAAU,eAAea,GAAG,aAAaT,SAAUjC,KAAK8D,qBAInG,4BAAQ9B,KAAK,SAASH,UAAU,uBAAhC,0B,GAvESM,cCuBduE,G,MAtBM,SAAC,GAAwD,IAAtDhG,EAAqD,EAArDA,KAAMqC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAG/D,OADAQ,QAAQC,IAAIT,GAER,yBAAKtB,UAAU,YACX,6BAASA,UAAU,iBAGf,4BAAKnB,GACL,6BACA,kBAAC,IAAD,CAAMmB,UAAU,sBAAsBqE,GAAE,oBAAe/C,IAAvD,gBACA,2BAAIJ,GACJ,8CAAmB,2BAAIC,IACvB,gEAAsCC,EAAtC,KACA,2BAAG,2BAAIC,IAEP,kBAAC,IAAD,CAAMrB,UAAU,sBAAsBqE,GAAI,CAACS,SAAS,eAAiB5F,MAAO,CAAC2B,GAAIS,KAAjF,qBCyDDyD,E,YAxEX,WAAYtG,GAAQ,IAAD,8BACf,4CAAMA,KAeVwD,kBAAoB,SAAAtD,GAAC,OAAI,EAAKI,SAAL,eAAiBJ,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAhBhD,EAkBnBE,iBAAmB,SAAAL,GACfA,EAAEM,iBACF,EAAKpB,QAAQiD,aAAa,EAAK5B,OAC1BE,KAAK,SAAA8C,GACF,EAAKzD,MAAM0D,aACX,EAAK1D,MAAMiF,uBAEdhE,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAI,QAASzC,MAvBvC,EAAKJ,MAAQ,CACTL,KAAM,GACNqC,YAAa,GACbC,KAAM,GACNC,QAAS,GACTC,QAAS,GACT2D,WAAY,EAAKvG,MAAMkF,UAAU9D,KAAKyB,IACtC2D,MAAO,IAEX,EAAKpH,QAAU,IAAIL,EAXJ,E,sEAgCf,OACI,oCACI,mDAEA,6BAEA,0BAAMwC,UAAU,gBAAgBC,SAAU9B,KAAKa,kBAC3C,yBAAKgB,UAAU,cACX,2BAAOE,QAAQ,gBAAf,UACA,2BAAOrB,KAAK,OAAOsB,KAAK,OAAOH,UAAU,eAAea,GAAG,eAAeT,SAAUjC,KAAK8D,qBAE7F,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,qBAAf,kBACA,2BAAOrB,KAAK,cAAcsB,KAAK,OAAOH,UAAU,eAAea,GAAG,oBAAoBT,SAAUjC,KAAK8D,qBAEzG,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,cAAf,UACA,2BAAOrB,KAAK,OAAOsB,KAAK,OAAOH,UAAU,eAAea,GAAG,aAAaT,SAAUjC,KAAK8D,qBAE3F,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,iBAAf,WACA,2BAAOrB,KAAK,UAAUsB,KAAK,OAAOH,UAAU,eAAea,GAAG,gBAAgBT,SAAUjC,KAAK8D,qBAEjG,yBAAKjC,UAAU,cACX,2BAAOE,QAAQ,iBAAf,2BACA,2BAAOrB,KAAK,UAAUsB,KAAK,OAAOH,UAAU,eAAea,GAAG,gBAAgBT,SAAUjC,KAAK8D,qBAEjG,yBAAKjC,UAAU,eAIf,4BAAQG,KAAK,SAASH,UAAU,uBAAhC,SACA,4BAAQA,UAAU,sBAAsB6D,QAAS1F,KAAKM,MAAM0D,YAA5D,gB,GAlEO7B,aCiDZ4E,E,YA5CX,aAAe,IAAD,8BACV,+CAKJrC,kBAAoB,kBAAM,EAAKC,cANjB,EAQdA,WAAa,WACT,EAAKC,SAAStC,eACTrB,KAAK,SAAAQ,GAAQ,OAAI,EAAKb,SAAS,CAAEkE,UAAWrD,EAASC,SACrDH,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAIzC,MAXpB,EAcd4D,gBAAkB,kBAAM,EAAKnE,SAAS,CAAEoE,WAAW,KAdrC,EAedC,iBAAmB,kBAAM,EAAKrE,SAAS,CAAEoE,WAAW,KAbhD,EAAKjE,MAAQ,CAAE+D,UAAW,GAAIE,WAAW,GACzC,EAAKJ,SAAW,IAAIvF,EAHV,E,sEAoBV,OACI,oCACI,yBAAKwC,UAAU,aAEX,kBAACuD,EAAA,EAAD,CAAQC,QAASrF,KAAKiF,iBAAkBK,KAAMtF,KAAKe,MAAMiE,UAAWnD,UAAU,cAClG,kBAAC,EAAD,CAAcmC,WAAYhE,KAAKiF,iBAAkBM,mBAAoBvF,KAAK2E,WAAYa,UAAWxF,KAAKM,MAAMiE,iBAGxF,uDAECvE,KAAKM,MAAMiE,eAAiB,4BAAQ1C,UAAU,uBAAuB6D,QAAS1F,KAAK+E,iBAAvD,yBAE7B,yBAAKlD,UAAU,qBAEV7B,KAAKe,MAAM+D,UAAUI,IAAI,SAAAC,GAAQ,OAAI,kBAAC,EAAD,eAAcM,IAAKN,EAAShC,KAASgC,a,GApCxEhD,a,OCQZ6E,EAdQ,SAAC,GAAoE,IAAvD7E,EAAsD,EAAjE8E,UAAsB1C,EAA2C,EAA3CA,cAAe2C,EAA4B,EAA5BA,aAAiBC,EAAW,4DAEvF,OADAxD,QAAQC,IAAIW,EAAe,kBAEvB,kBAAC,IAAD,iBAAW4C,EAAX,CAAiBC,OAAQ,SAAA9G,GACrB,OAAIiE,EACO,kBAACpC,EAAD,iBAAe7B,EAAf,CAAsBuE,aAAcN,KAEpC,kBAAC,IAAD,CAAU2B,GAAI,CAAES,SAAUO,UCyElCG,G,kBAzEX,WAAY/G,GAAQ,IAAD,8BACf,4CAAMA,KACDS,MAAQ,CAAEoE,SAAU,IACzB,EAAKzF,QAAU,IAAIL,EACnB,EAAKiI,UAAY,CAAEA,UAAW,CAAC,KAJhB,E,iFAOE,IAAD,OACftH,KAAKN,QAAQ+C,eAAezC,KAAKM,MAAMiH,MAAMC,OAAO9E,IAGhDzB,KACG,SAAAQ,GAAQ,OAAI,EAAKb,SAAS,CAAEuE,SAAU1D,EAASC,MAAQ,kBAAKiC,QAAQC,IAAI,EAAK7C,WAGhFQ,MAAM,SAAAJ,GAAG,OAAIwC,QAAQC,IAAI,MAAOzC,O,+BAOrC,OAMI,yBAAKU,UAAU,kCACX,6BAASA,UAAU,kBACf,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,2CAAiB7B,KAAKe,MAAMoE,SAASzE,MACrC,2BAAG,mDAAH,IAAkCV,KAAKe,MAAMoE,SAASpC,aACtD,6BACA,2BAAG,0CAAH,IAA2B/C,KAAKe,MAAMoE,SAASnC,MAC/C,2BAAG,+CAGHhD,KAAKe,MAAMoE,SAAS2B,OAAS9G,KAAKe,MAAMoE,SAAS2B,MAAM5B,IAAI,SAAAf,GAAI,OAAI,4BAAKA,KACpG,6BAC4B,2BAAG,qDACH,6BACA,2BAAG,yCAEXnE,KAAKe,MAAMoE,SAASsC,kBACpBzH,KAAKe,MAAMoE,SAASsC,iBAAiBvC,IAAI,SAAAwC,GAAO,OAAI,4BAAKA,KAClE,6BACU,2BAAG,wCAES1H,KAAKe,MAAMoE,SAASwC,cACpB3H,KAAKe,MAAMoE,SAASwC,aAAazC,IAAI,SAAA0C,GAAW,OAAG,4BAAKA,KAC5D,6BACE,2BAAG,0CAEJ5H,KAAKe,MAAMoE,SAAS0C,OACtB7H,KAAKe,MAAMoE,SAAS0C,MAAM3C,IAAI,SAAA4C,GAAI,OAAG,4BAAKA,KACzC,6BAED,2BAAG,8EAAH,IAAwD9H,KAAKe,MAAMoE,SAASlC,QAA5E,KACA,2BAAG,yCAAH,IAAsBjD,KAAKe,MAAMoE,SAASjC,QAA1C,KAAuD,6BAEvD,kBAAC,IAAD,CAAMrB,UAAU,uBAAuBqE,GAAG,cAA1C,kB,GAhEC/D,cCed4F,G,MAnBC,SAAC,GAAa,IAAX5E,EAAU,EAAVA,IAGf,OADAQ,QAAQC,IAAIT,GAER,yBAAKtB,UAAU,aACX,6BAASA,UAAU,gBAC/B,+BAAO,gEAAmC,6BACtC,kHAEA,wEAAoC,6BAApC,sCAHJ,KAKgB,kBAAC,IAAD,CAAMA,UAAU,sBAAsBqE,GAAE,WAAxC,sCCiED8B,E,YA/Db,aAAe,IAAD,8BACZ,+CAKFC,WAAa,SAAAH,GACX,EAAKlH,SAAS,CAAEiE,aAAciD,IAC9BnE,QAAQC,IAAI,+CAAgD,EAAK7C,MAAM8D,eAR3D,EAWdqD,UAAY,WACsB,OAA5B,EAAKnH,MAAM8D,cACb,EAAK7D,aAAalB,WACfmB,KAAK,SAAAQ,GAAQ,OAAI,EAAKb,SAAS,CAAEiE,aAAcpD,MAC/CF,MAAM,SAAAwC,GAAC,OAAI,EAAKnD,SAAS,CAAEiE,cAAc,OAb9C,EAAK9D,MAAQ,CAAE8D,aAAc,MAC7B,EAAK7D,aAAe,IAAIY,EAHZ,E,sEAmBJ,IAAD,OAGP,OAAI5B,KAAKe,MAAM8D,aAEJ,6BAER,kBAAC,EAAD,CAAQzD,QAASpB,KAAKiI,WAAY1D,cAAevE,KAAKe,MAAM8D,eACzD,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOsD,KAAK,IAAIC,OAAK,EAACnB,UAAWc,IAE/B,kBAAC,IAAD,CAAOI,KAAK,gBAAgBC,OAAK,EAACnB,UAAWI,IAC7C,kBAAC,IAAD,CAAOc,KAAK,cAAcC,OAAK,EAAChB,OAAQ,SAACG,GAAD,OAAW,kBAAC,EAAD,iBAAoBA,EAApB,CAA2BhD,cAAe,EAAKxD,MAAM8D,mBACxG,kBAAC,IAAD,CAAOsD,KAAK,aAAaC,OAAK,EAAChB,OAAQ,kBAAM,kBAAC,EAAD,CAAe7C,cAAe,EAAKxD,MAAM8D,kBAEtF,kBAACwD,EAAD,CAAgBF,KAAK,WAAW5D,cAAevE,KAAKe,MAAM8D,aAAcoC,UAAWxC,IACnF,kBAAC,IAAD,CAAO0D,KAAK,YAAaf,OAAQ,kBAAM,kBAAC,EAAD,CAAc7C,cAAe,EAAKxD,MAAM8D,oBAO7E,6BAER,kBAAC,EAAD,CAAQzD,QAASpB,KAAKiI,WAAY1D,cAAevE,KAAKe,MAAM8D,eACzD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsD,KAAK,IAAIC,OAAK,EAACnB,UAAWc,IAGjC,kBAAC,IAAD,CAAOI,KAAK,gBAAgBC,OAAK,EAACnB,UAAWI,IAC7C,kBAAC,IAAD,CAAOc,KAAK,aAAaC,OAAK,EAAChB,OAAQ,kBAAM,kBAAC,EAAD,CAAe7C,cAAe,EAAKxD,MAAM8D,kBAEtF,kBAAC,IAAD,CAAOsD,KAAK,cAAcC,OAAK,EAAChB,OAAQ,SAAAG,GAAK,OAAI,kBAAC,EAAD,iBAAoBA,EAApB,CAA2BhD,cAAe,EAAKxD,MAAM8D,mBAEtG,kBAAC,IAAD,CAAOsD,KAAK,UAAUC,OAAK,EAAChB,OAAQ,SAAAG,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBnG,QAAS,EAAK6G,iBAC9E,kBAAC,IAAD,CAAOE,KAAK,SAASC,OAAK,EAAChB,OAAQ,SAAAG,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkBnG,QAAS,EAAK6G,uB,GAzDrE9F,aCHEmG,QACW,cAA7BC,OAAOrE,SAASsE,UAEe,UAA7BD,OAAOrE,SAASsE,UAEhBD,OAAOrE,SAASsE,SAASjB,MACvB,2DCXNkB,IAASrB,OACL,kBAAC,IAAD,KACJ,kBAAC,EAAD,OAGCvB,SAAS6C,eAAe,SDqHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5H,KAAK,SAAA6H,GACjCA,EAAaC,iB","file":"static/js/main.abd28114.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: 'http://localhost:5000/api/',\n\n     //       baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    signup = (username, password, email) => this.service.post('signup', { username, password, email })\n    login = (username, password) => this.service.post('login', { username, password })\n    logout = () => this.service.post('logout')\n    loggedin = () => this.service.get('loggedin')\n}","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\nimport '../../styles/login.css';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            err: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state\n        this.authServices.login(username, password)\n            .then(theLoggedUser => {\n                this.setState({\n                    username: '',\n                    password: '',\n                    err: ''\n                })\n                this.props.setUser(theLoggedUser)\n                this.props.history.push('/bookclubs')\n            })\n            .catch(err => {\n                let msg = err.response.data.message\n                 this.setState({err: msg})\n            })\n    }\n\n    render() {\n\n        return (\n            <div className=\"container login-form\">\n            <form className=\"px-3 py-3 form-control form-control-sm\" onSubmit={this.handleFormSubmit}>\n             <div className=\"form-group\">\n             <label htmlFor=\"input-username\">Usuario:</label>\n             <input type=\"text\" className=\"form-control\" name=\"username\" \n              value={this.state.username} onChange={this.handleInputChange}  placeholder=\"Su nombre de usuario\"/>\n             </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"input-password\">Contraseña</label>\n            <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"Contraseña\"/>\n            </div>\n        \n        <button type=\"submit\" className=\"btn btn-primary\">Iniciar sesión</button>\n      </form>\n      {this.state.err && <p className=\"login-error\">{this.state.err}</p>}\n      </div>\n        )\n    }\n}\n\nexport default Login","import React, { Component } from 'react'\nimport AuthServices from '../../services/auth.services'\nimport '../../styles/signup.css';\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n            err: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        const { username, password, email } = this.state\n        this.authServices.signup(username, password, email)\n            .then(theNewUser => {\n                this.setState({\n                    username: '',\n                    password: '',\n                    email: '',\n                    err: \"\"\n                })\n                this.props.setUser(theNewUser)\n                this.props.history.push('/bookclubs')\n            })\n           .catch(err => {\n               let msg = err.response.data.message\n                this.setState({err: msg})\n           })\n    }\n\n    render() {\n\n        return (\n\n           \n        <div className=\"container signup-form\">\n        <form className=\"px-3 py-3 form-control form-control-sm\" onSubmit={this.handleFormSubmit}>\n         <div className=\"form-group\">\n         <label htmlFor=\"input-username\">Usuario:</label>\n         <input type=\"text\" className=\"form-control\" name=\"username\" \n          value={this.state.username} onChange={this.handleInputChange}  placeholder=\"Su nombre de usuario\"/>\n         </div>\n        <div className=\"form-group\">\n        <label htmlFor=\"input-password\">Contraseña</label>\n        <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"Contraseña\"/>\n        </div>\n        <div className=\"form-group\">\n        <label htmlFor=\"input-email\">Correo</label>\n         <input type=\"email\" className=\"form-control\" name=\"email\"  value={this.state.email} onChange={this.handleInputChange} placeholder=\"Correo\"/>\n          </div>\n    <button type=\"submit\" className=\"btn btn-primary\">Registrar</button>\n  </form>\n                {this.state.err && <p className=\"signup-error\">{this.state.err}</p>}\n  </div>\n         //   {/* {/* // <div className=\"container\">\n            //     <h1>Registro de usuario</h1>\n            //     <form onSubmit={this.handleFormSubmit}>\n            //         Usuario: <input name=\"username\" type=\"text\" value={this.state.username}  */}\n       //     {/* //         onChange={this.handleInputChange} /> <br></br>\n            //         Contraseña: <input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} /> <br></br>\n            //         Correo: <input name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleInputChange} /> <br></br>\n            //         <input type=\"submit\" value=\"Registrar\" />\n            //     </form>\n            // </div> */} \n\n        )\n    }\n}\n\nexport default Signup\n\n\n  ","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: 'http://localhost:5000/api/',\n            // baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    getBookclubs = () => this.service.get('getAllBookclubs')\n    getMyBookclub = user_id => this.service.get(`getMyBookclub/${user_id}`)\n    getOneBookclub = id => this.service.get(`getOneBookclub/${id}`)\n    postBookclub = theNewBookclub => this.service.post(`postBookclub`, theNewBookclub)\n    addClubMember = theNewBookclub => {\n        // console.log(theNewBookclub)\n        return this.service.post(`addClubMembers`, theNewBookclub)\n    }\n\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport '../styles/mybookclub-card.css'\n\n\nconst MyBookclubCard = ({ name, description, city, creator, contact, _id }) => {\n\n    return (\n        <div className=\"mybookclub-card bg-light\">\n            {/* <article className=\"mybookclub-card\"> */}\n               \n                <h4>{name}</h4>\n                <hr></hr>\n                {/* <Link className=\"btn btn-sm btn-dark\" to={`/schedule/${_id}`}>Programar reuniones</Link>  */}\n                <p>{description}</p>\n                <p><b>{city}</b></p>\n                <p>{creator} </p>\n                <p><b>{contact}</b></p>\n            {/* </article> */}\n        </div>\n    )\n}\n\nexport default MyBookclubCard","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: 'http://localhost:5000/api/',\n            // baseURL: `${process.env.REACT_APP_URL}`,\n            withCredentials: true\n        })\n    }\n\n    getMeetings = () => this.service.get('getAllMeetings')\n    getMyMeeting = bookclub_id => this.service.get(`getMyMeeting/${bookclub_id}`)\n    getOneMeeting = id => this.service.get(`getOneMeeting/${id}`)\n    postMeeting = theNewMeeting => this.service.post(`postMeeting`, theNewMeeting)\n    addMeetingtoClub = theNewBookclub => { \n        console.log('service de addmeeting', theNewBookclub)\n        return this.service.post(`addMeetingtoClub`, theNewBookclub)}\n}","import React, { Component } from 'react'\nimport Services from '../services/meeting.services'\nimport  '../styles/bookclubform.css'\n\n\n\nclass ScheduleForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            clubname: '',\n            location: '',\n            book: '',\n            bookauthor: '',\n            date: '',\n            time: '',\n            bookclub_id: this.props.userInSession.data._id\n        }\n        this.service = new Services()\n        \n    }\n\n   \n    componentDidMount() {\n        this.setState({clubname: this.props.club.name}) \n   }\n     \n \n    handleChangeInput = e => this.setState({ [e.target.name]: e.target.value })\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        console.log(\"this.state at ScheduleForm: \",this.state)\n        this.service.postMeeting(this.state)\n            .then(x => {\n                console.log(\"is this passed to Addmeeting? \",this.state)\n                this.service.addMeetingtoClub(this.state)\n                    .then(x => console.log(x))\n                    .catch(err => console.log({err}))\n                this.props.closeModal()\n              \n         //       this.setState = {}\n            })\n    //         .then(x => {\n    //             console.log(this.state)\n    //   //          this.props.closeModal()\n    //             this.props.updateMeetingList()\n    //      //       this.setState = {}\n    //         })\n            .catch(err => console.log('error', {err}))\n    }\n\n    render() {\n     //   console.log(\"props: \", this.props)\n        \n    // console.log(\"bookclubform - this.props.creatorid: \", this.props.creatorid.data._id)\n        // let dataid= this.props.creatorid.data._id\n        return (\n            <>\n                <h4>Nueva Reunión</h4>\n\n                <hr></hr>\n\n                <form className=\"bookclub-form\" onSubmit={this.handleFormSubmit}>\n                    {/* <div className=\"form-group\">\n                        <label htmlFor=\"input-nombre\">Nombre</label>\n                        <input name=\"name\" type=\"text\" className=\"form-control\" id=\"input-nombre\" onChange={this.handleChangeInput} />\n                    </div> */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-location\">Dirección</label>\n                        <input name=\"location\" type=\"text\" className=\"form-control\" id=\"input-location\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-book\">Libro</label>\n                        <input name=\"book\" type=\"text\" className=\"form-control\" id=\"input-book\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-creator\">Autor</label>\n                        <input name=\"bookauthor\" type=\"text\" className=\"form-control\" id=\"input-bookauthor\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-date\">Fecha</label>\n                        <input name=\"date\" type=\"date\" className=\"form-control\" id=\"input-date\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-date\">Hora</label>\n                        <input name=\"time\" type=\"time\" className=\"form-control\" id=\"input-time\" onChange={this.handleChangeInput} />\n                    </div>\n                   \n                    <button type=\"submit\" className=\"btn btn-dark btn-sm\">Crear</button>\n                \n                </form>\n            </>\n        )\n    }\n\n}\n\nexport default ScheduleForm","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\n\nimport MyBookclubCard from './MyBookClubCard'\nimport ScheduleForm from './ScheduleForm'\n\nimport Dialog from '@material-ui/core/Dialog';\n\n\nclass MyClubs extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { bookclubs: [], showModal: false }\n        this.services = new Services()\n    }\n\n    componentDidMount = () => this.updateList()\n\n    updateList = () => {\n        // console.log('actualizando lista')\n        this.services.getMyBookclub(this.props.loggedInUser.data._id)\n            .then(response => this.setState({ bookclubs: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleModalOpen = () => this.setState({ showModal: true })\n    handleModalClose = () => this.setState({ showModal: false })\n\n    render() {\n //       console.log(\"this is at MyClubs.js\", this.state.bookclubs)\n        return (\n            <>\n                <div className=\"container\">\n                <h1>Mis Clubs de Libro</h1>\n                    {/* {this.props.loggedInUser && <button className=\"btn btn-dark btn-big\" onClick={this.handleModalOpen}>Iniciar un club nuevo</button>} */}\n\n                    <div className=\"row bookclubs-list\">\n\n        {this.state.bookclubs.map(bookclub => {\nreturn (\n        <>         \n    \n        <Dialog onClose={this.handleModalClose} open={this.state.showModal} className=\"modal-form\">\n            <ScheduleForm userInSession={this.props.loggedInUser} closeModal={this.handleModalClose} updateBookclubList={this.updateList} creatorid={this.props.loggedInUser} club={bookclub}/>\n        </Dialog>\n        <div className=\"col-med-4\">\n        <MyBookclubCard  key={bookclub._id} {...bookclub} />\n        <button className=\"btn btn-sm btn-dark\" onClick={this.handleModalOpen}>Programar una reunión</button>   \n        </div>\n        </>)\n        })}\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default MyClubs","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport AuthServices from '../services/auth.services'\nimport MyClubs from './MyClubs'\n// import ProtectedRoute from '../components/routes/ProtectedRoute'\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authServices = new AuthServices()\n    }\n\n\n    toggleMenu = () => document.querySelector('.menu').classList.toggle('abierto')\n\n  \n\n    logout = () => {\n        this.authServices.logout()\n            .then(x => {\n                this.props.setUser(null)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n\n        const saludo = this.props.userInSession ? this.props.userInSession.data.username : 'invitado'\n\n\n        if (this.props.userInSession) {\n            return (\n                <>\n                <div className=\"toggle-menu\" onClick={this.toggleMenu}>&equiv; </div>\n                    <header className=\"menu\">\n                        <h1>El Club del Libro</h1>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Inicio</Link></li>\n                                <li><Link to=\"/bookclubs\">Club de Libros</Link></li>\n                                {/* <li><Link to=\"/profile\">Perfil</Link></li> */}\n                 \n                 \n                                <li><Link to=\"/myclubs\">Mis Clubes </Link></li>\n                                {/* <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} />\n                                 */}\n                                {/* <li><Link to=\"/signup\">Registro</Link></li>\n                                <li><Link to=\"/login\">Inicio de sesión</Link></li> */}\n                                <li><div onClick={this.logout}>Cerrar sesión</div></li>\n                                <li><small>Bienvenid@, {saludo}</small></li>\n                            \n                            </ul>\n                        </nav>\n                    </header>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <div className=\"toggle-menu\" onClick={this.toggleMenu}>&equiv; </div>\n                    <header className=\"menu\">\n                        <h1>El Club del Libro</h1>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Inicio</Link></li>\n                                <li><Link to=\"/bookclubs\">Clubes de Libro</Link></li>\n\n                                {/* <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} /> */}\n                                <li><Link to=\"/signup\">Registro</Link></li>\n                                <li><Link to=\"/login\">Inicio de sesión</Link></li>\n                                <li><small>Bienvenid@, {saludo}</small></li>\n                            </ul>\n                        </nav>\n                    </header>\n                </>\n            )\n        }\n        }\n\n    }\n\nexport default NavBar","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\nimport '../styles/membership.css';\n\n\n\nclass MembershipForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            bookclub_id: '',\n            membername: '',\n            memberemail: '',\n            // userInSession: this.props.userInSession.data._id\n        }\n\n        this.service = new Services()\n        \n    }\n\n   \n    componentDidMount() {\n        this.setState({bookclub_id: this.props.location.state.id})\n    // console.log(\"this.props.clubname\", this.props.bookclubName)   \n    }\n     \n \n    handleChangeInput = e => this.setState({ [e.target.name]: e.target.value })\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n       const ids = {\n           userId: this.props.userInSession.data._id,\n           bookClubId: this.state.bookclub_id,\n           memberemail: this.state.memberemail,\n           membername: this.state.membername\n       }\n        this.service.addClubMember(ids)\n            .then(x => {\n                console.log(this.state)\n                this.props.closeModal()\n                this.props.updateBookList()\n                // this.service.postBookclub({_id: this.state.bookclub_id})\n         //       this.setState = {}\n            })\n            .then(x => {\n                console.log(this.state)\n      //          this.props.closeModal()\n                this.props.updateBookList()\n                this.setState = {}\n            })\n            .catch(err => console.log('error', err))\n    }\n\n    render() {\n       console.log(\"props: \", this.props)\n        \n    // console.log(\"bookclubform - this.props.creatorid: \", this.props.creatorid.data._id)\n        // let dataid= this.props.creatorid.data._id\n        return (\n            <div className=\"container  membership-form\">\n                \n\n                <form className=\"px-3 py-3 form-control form-control-sm\"  onSubmit={this.handleFormSubmit}>\n                  \n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-location\">Por favor ingresa tu nombre</label>\n                        <input name=\"membername\" type=\"text\" className=\"form-control\" id=\"input-membername\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-email\">Por favor ingresa tu email</label>\n                        <input name=\"memberemail\" type=\"email\" className=\"form-control\" id=\"input-book\" onChange={this.handleChangeInput} />\n                    </div>\n                   \n                   \n                    <button type=\"submit\" className=\"btn btn-dark btn-sm\">Únete al club</button>\n                \n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default MembershipForm","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Dialog from '@material-ui/core/Dialog';\nimport MembershipForm from './MembershipForm'\nimport '../styles/bookclub-card.css'\n\n\nconst BookclubCard = ({ name, description, city, creator, contact, _id }) => {\n    \n    console.log(_id)\n    return (\n        <div className=\"col-md-3\">\n            <article className=\"bookclub-card\">\n\n               \n                <h4>{name}</h4>\n                <hr></hr>\n                <Link className=\"btn btn-sm btn-dark\" to={`/bookclub/${_id}`}>Ver detalles</Link>\n                <p>{description}</p>\n                <p>Nos reunimos en <b>{city}</b></p>\n                <p>Para mas informacion contactar a: {creator} </p>\n                <p><b>{contact}</b></p>\n\n                <Link className=\"btn btn-sm btn-dark\" to={{pathname: `/membership/`, state: {id: _id} }} >Regístrate</Link>\n            </article>\n        </div>\n    )\n}\n\nexport default BookclubCard","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\nimport  '../styles/bookclubform.css'\n\n\n\nclass BookclubForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            description: '',\n            city: '',\n            creator: '',\n            contact: '',\n            creator_id: this.props.creatorid.data._id,\n            books: ''\n        }\n        this.service = new Services()\n    }\n\n  \n   \n    handleChangeInput = e => this.setState({ [e.target.name]: e.target.value })\n\n    handleFormSubmit = e => {\n        e.preventDefault()\n        this.service.postBookclub(this.state)\n            .then(x => {\n                this.props.closeModal()\n                this.props.updateBookclubList()\n            })\n            .catch(err => console.log('error', err))\n    }\n\n    render() {\n\n    // console.log(\"bookclubform - this.props.creatorid: \", this.props.creatorid.data._id)\n        // let dataid= this.props.creatorid.data._id\n        return (\n            <>\n                <h4>Nuevo Club de Libro</h4>\n\n                <hr></hr>\n\n                <form className=\"bookclub-form\" onSubmit={this.handleFormSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-nombre\">Nombre</label>\n                        <input name=\"name\" type=\"text\" className=\"form-control\" id=\"input-nombre\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-description\">Descripción</label>\n                        <input name=\"description\" type=\"text\" className=\"form-control\" id=\"input-description\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-city\">Ciudad</label>\n                        <input name=\"city\" type=\"text\" className=\"form-control\" id=\"input-city\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-creator\">Creador</label>\n                        <input name=\"creator\" type=\"text\" className=\"form-control\" id=\"input-creator\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-contact\">Informacion de contacto</label>\n                        <input name=\"contact\" type=\"text\" className=\"form-control\" id=\"input-contact\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                    {/* <input name=\"creator_id\" type=\"hidden\" className=\"form-control\" id=\"input-creatorid\" value=\"dataid\" /> */}\n                        {/* <input name=\"creator_id\" type=\"hidden\" className=\"form-control\" id=\"input-creatorid\" value={this.props.creatorid.data._id} /> */}\n                        </div>\n                    <button type=\"submit\" className=\"btn btn-dark btn-sm\">Crear</button>\n                    <button className=\"btn btn-dark btn-sm\" onClick={this.props.closeModal}>Cerrar</button>\n                </form>\n            </>\n        )\n    }\n\n}\n\nexport default BookclubForm","import React, { Component } from 'react'\nimport Services from '../services/bookclub.services'\n\nimport BookclubCard from './Bookclub-card'\nimport BookclubForm from './Bookclub-form'\n\nimport Dialog from '@material-ui/core/Dialog';\n\n\nclass BookclubList extends Component {\n\n    constructor() {\n        super()\n        this.state = { bookclubs: [], showModal: false }\n        this.services = new Services()\n    }\n\n    componentDidMount = () => this.updateList()\n\n    updateList = () => {\n        this.services.getBookclubs()\n            .then(response => this.setState({ bookclubs: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleModalOpen = () => this.setState({ showModal: true })\n    handleModalClose = () => this.setState({ showModal: false })\n\n\n    render() {\n  //      console.log(this.state.bookclubs)\n        return (\n            <>\n                <div className=\"container\">\n\n                    <Dialog onClose={this.handleModalClose} open={this.state.showModal} className=\"modal-form\">\n<BookclubForm closeModal={this.handleModalClose} updateBookclubList={this.updateList} creatorid={this.props.userInSession}/>\n                    </Dialog>\n\n                    <h1>Lista de Clubs de Libro</h1>\n\n                    {this.props.userInSession && <button className=\"btn btn-dark btn-big\" onClick={this.handleModalOpen}>Iniciar un club nuevo</button>}\n\n                    <div className=\"row coasters-list\">\n\n                        {this.state.bookclubs.map(bookclub => <BookclubCard key={bookclub._id} {...bookclub} />)}\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default BookclubList","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute = ({ component: Component, userInSession, redirectPath, ...rest }) => {\n    console.log(userInSession, 'esta o no esta')\n    return (\n        <Route {...rest} render={props => {\n            if (userInSession) {\n                return <Component {...props} loggedInUser={userInSession} />\n            } else {\n                return <Redirect to={{ pathname: redirectPath }} />\n            }\n        }\n        }\n        />\n    )\n}\nexport default protectedRoute;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Services from '../services/bookclub.services'\nimport '../styles/bookclubdetail.css';\n\n\n\n\nclass BookclubDetail extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { bookclub: {} }\n        this.service = new Services()\n        this.usernames = { usernames: [{}]}\n    }\n\n    componentDidMount() {\n         this.service.getOneBookclub(this.props.match.params.id)\n\n        \n            .then(\n                response => this.setState({ bookclub: response.data }, ()=> console.log(this.state))\n             \n                )\n            .catch(err => console.log('err', err))\n      \n            \n    }\n\n    render() {\n        \n        return (\n\n              \n                             \n            \n            \n            <div className=\"container bookclub-detail-form\">\n                <article className=\"coaster-detail\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-6\">\n                            <h1>Detalles de {this.state.bookclub.name}</h1>\n                            <p><strong>Descripción:</strong> {this.state.bookclub.description}</p>\n                            <hr></hr>\n                            <p><small>Ciudad:</small> {this.state.bookclub.city}</p>                        \n                            <p><b>Libros leidos: </b></p>\n                           \n                            {\n                            this.state.bookclub.books && this.state.bookclub.books.map(book => <li>{book}</li>) }   \n<br></br>\n                            <p><b> Nuestras reuniones: </b></p>\n                            <br></br>\n                            <p><b>Lugares: </b></p>\n                {\n                    this.state.bookclub.meetinglocations && \n                    this.state.bookclub.meetinglocations.map(meeting => <li>{meeting}</li>) }\n           <br></br>     \n                     <p><b>Fechas: </b></p>\n                             { \n                                 this.state.bookclub.meetingdates &&\n                                 this.state.bookclub.meetingdates.map(meetingdate =><li>{meetingdate}</li> )} \n                             <br></br>\n                               <p><b>Miembros: </b></p> \n                          \n                             {this.state.bookclub.users &&\n                            this.state.bookclub.users.map(user =><li>{user}</li>)} \n                             <br></br>\n                            \n                            <p><b>Para más informacion ponte en contacto con: </b> {this.state.bookclub.creator} </p>\n                            <p><b>Su correo </b> {this.state.bookclub.contact} </p><br></br>\n                          \n                            <Link className=\"btn btn-big btn-dark\" to=\"/bookclubs\">Volver</Link>\n                        </div>\n                        \n                    </div>\n                </article>\n            </div>\n        )\n    }\n\n}\n\nexport default BookclubDetail","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport '../styles/welcome-card.css'\n\nconst Welcome = ({ _id }) => {\n    \n    console.log(_id)\n    return (\n        <div className=\"col-md-6 \">\n            <article className=\"welcome-card\">\n<quote><h1>¿Qué es un club de Libros?</h1><br></br>\n    <p> Es un motivo para reunirse con amigos, \n    discutiendo un libro y tomando un café. </p>\n    <p>Aquí tratamos de hacer más fácil <br></br>\n    el que organizes tu club de libro.</p> </quote>\n                <Link className=\"btn btn-sm btn-dark\" to={`/login/`}>Si ya te has únido, ingresa</Link>\n             \n                \n            </article>\n        </div>\n    )\n}\n\nexport default Welcome","import React, {Component} from 'react';\nimport './App.css';\nimport Login from './components/auth/login'\nimport Signup from './components/auth/signup'\nimport { Switch, Route } from 'react-router-dom'\nimport NavBar from './components/Navbar'\nimport AuthServices from './services/auth.services'\nimport BookclubsList from './components/Bookclub-list'\nimport MyClubs from './components/MyClubs'\nimport ProtectedRoute from './components/routes/ProtectedRoute'\nimport ScheduleForm from './components/ScheduleForm'\nimport BookclubDetail from './components/Bookclub-detail'\nimport MembershipForm from './components/MembershipForm'\nimport Welcome from './components/Welcome'\n//Switch y Route\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: null }\n    this.authServices = new AuthServices()\n  }\n\n  setTheUser = user => {\n    this.setState({ loggedInUser: user })\n    console.log(\"Un componente ha cambiado el usuario en App:\", this.state.loggedInUser)\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this.authServices.loggedin()\n        .then(response => this.setState({ loggedInUser: response }))\n        .catch(x => this.setState({ loggedInUser: false }))\n    }\n  }\n\n  render() {\n\n   \n    if (this.state.loggedInUser) {\n   \n     return  ( <div>\n       \n       <NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n          <Switch>\n          <Route path=\"/\" exact component={Welcome} />\n            {/* <Route path=\"/bookclub\"  /> */}\n            <Route path=\"/bookclub/:id\" exact component={BookclubDetail} />\n            <Route path=\"/membership\" exact render={(match) => <MembershipForm {...match} userInSession={this.state.loggedInUser} />} />\n            <Route path=\"/bookclubs\" exact render={() => <BookclubsList userInSession={this.state.loggedInUser} />} />\n            {/* <Route path=\"/bookclub/:id\" exact component={BookclubDetail} /> */}\n            <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} />\n            <Route path=\"/schedule\"  render={() => <ScheduleForm userInSession={this.state.loggedInUser} />} />       \n            \n          </Switch>\n        </div>\n     )\n    }\n    else\n    return  ( <div>\n       \n      <NavBar setUser={this.setTheUser} userInSession={this.state.loggedInUser} />\n         <Switch>\n           <Route path=\"/\" exact component={Welcome} />\n\n           {/* <Route path=\"/bookclub\"  /> */}\n           <Route path=\"/bookclub/:id\" exact component={BookclubDetail} />\n           <Route path=\"/bookclubs\" exact render={() => <BookclubsList userInSession={this.state.loggedInUser} />} />\n           {/* <ProtectedRoute path='/myclubs' userInSession={this.state.loggedInUser} component={MyClubs} /> */}\n           <Route path=\"/membership\" exact render={match => <MembershipForm {...match} userInSession={this.state.loggedInUser} />} />\n           {/* <Route path=\"/bookclub/:id\" exact component={BookclubDetail} /> */}\n           <Route path=\"/signup\" exact render={match => <Signup {...match} setUser={this.setTheUser} />} /> \n           <Route path=\"/login\" exact render={match => <Login {...match} setUser={this.setTheUser} />} />\n         </Switch>\n       </div>\n    )\n}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n// BrowserRouter\nReactDOM.render(\n    <Router>\n<App />\n</Router>,\n\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}